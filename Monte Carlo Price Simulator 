import numpy as np
import matplotlib.pyplot as plt

# Parameters
S0 = 100        # Initial stock price
mu = 0.07       # Expected annual return (drift)
sigma = 0.2     # Annual volatility
T = 1           # Time horizon (1 year)
N = 252         # Number of trading days
n_sim = 10000   # Number of simulations

dt = T / N
# Simulate random price paths
Z = np.random.randn(n_sim, N)
price_paths = np.zeros((n_sim, N + 1))
price_paths[:, 0] = S0

for t in range(1, N + 1):
    price_paths[:, t] = price_paths[:, t-1] * np.exp((mu - 0.5 * sigma**2) * dt + sigma * np.sqrt(dt) * Z[:, t-1])

# Plot histogram of final prices
plt.figure(figsize=(10, 6))
plt.hist(price_paths[:, -1], bins=50, color='skyblue', edgecolor='k')
plt.title('Histogram of Simulated 1-Year End Prices')
plt.xlabel('Stock Price at T=1')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()
